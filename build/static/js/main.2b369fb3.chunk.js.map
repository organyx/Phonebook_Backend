{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/People.js","components/Notification.js","services/phonebookService.js","components/App.js","index.js"],"names":["Filter","_ref","searchFilter","handleSearchFilterChange","react_default","a","createElement","value","onChange","PersonForm","addName","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","onSubmit","type","Person","person","deleteName","name","phoneNumber","onClick","People","persons","personsList","filter","toLowerCase","includes","map","components_Person","key","Notification","notificationMessage","notificationType","className","baseUrl","phonebookService","axios","get","then","res","data","post","id","delete","concat","newPerson","put","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewPhoneNumber","_useState7","_useState8","setSeachFilter","_useState9","_useState10","notification","setNotification","useEffect","setNotificationWithTimer","message","setNotificatonObject","setTimeout","components_Filter","event","console","log","target","components_Notification","components_PersonForm","preventDefault","personExists","findIndex","catch","error","window","confirm","currentPersonId","p","components_People","tempName","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b369fb3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ searchFilter, handleSearchFilterChange }) => {\r\n  return (\r\n    <div>\r\n      Show names containing with:{' '}\r\n      <input value={searchFilter} onChange={handleSearchFilterChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  addName,\r\n  newName,\r\n  handleNameChange,\r\n  newPhoneNumber,\r\n  handlePhoneNumberChange\r\n}) => {\r\n  return (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:{' '}\r\n        <input value={newPhoneNumber} onChange={handlePhoneNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Person = ({ person, deleteName }) => {\r\n  return (\r\n    <div>\r\n      {person.name} : {person.phoneNumber}\r\n      &nbsp;\r\n      <button onClick={deleteName}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\n\r\nimport Person from './Person';\r\n\r\nconst People = ({ persons, searchFilter, deleteName }) => {\r\n  const personsList = persons\r\n    .filter(person =>\r\n      person.name.toLowerCase().includes(searchFilter.toLowerCase())\r\n    )\r\n    .map(person => (\r\n      <Person\r\n        key={person.name}\r\n        person={person}\r\n        deleteName={() => deleteName(person)}\r\n      />\r\n    ));\r\n\r\n  return <ul>{personsList}</ul>;\r\n};\r\n\r\nexport default People;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notificationMessage, notificationType }) => {\r\n  if (notificationType === 'error') {\r\n    return <div className=\"error\">{notificationMessage}</div>;\r\n  } else if (notificationType === 'success') {\r\n    return <div className=\"success\">{notificationMessage}</div>;\r\n  } else {\r\n    return <div />;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://phonebook-backend-fs2019.herokuapp.com/api/people';\r\n\r\nconst getAllPeople = () => {\r\n  return axios.get(baseUrl).then(res => res.data);\r\n};\r\n\r\nconst addPerson = person => {\r\n  return axios.post(baseUrl, person).then(res => res.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}/${id}`).then(res => res.data);\r\n};\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, newPerson).then(res => res.data);\r\n};\r\n\r\nexport default {\r\n  getAllPeople,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePerson\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Filter from './Filter';\r\nimport PersonForm from './PersonForm';\r\nimport People from './People';\r\nimport Notification from './Notification';\r\n\r\nimport phonebookService from '../services/phonebookService';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([\r\n    { name: 'Arto Hellas', phoneNumber: '040-123456' },\r\n    { name: 'Ada Lovelace', phoneNumber: '39-44-5323523' },\r\n    { name: 'Dan Abramov', phoneNumber: '12-43-234345' },\r\n    { name: 'Mary Poppendieck', phoneNumber: '39-23-6423122' }\r\n  ]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\r\n  const [searchFilter, setSeachFilter] = useState('');\r\n  const [notification, setNotification] = useState([]);\r\n\r\n  useEffect(() => {\r\n    phonebookService.getAllPeople().then(res => setPersons(res));\r\n  }, []);\r\n\r\n  const addName = event => {\r\n    event.preventDefault();\r\n    console.log('Click...', event.target);\r\n    const personExists = persons.findIndex(person => person.name === newName);\r\n    console.log('personExists :', personExists);\r\n    if (personExists < 0 ? true : false) {\r\n      console.log('Person does not exist');\r\n      const personObject = {\r\n        name: newName,\r\n        phoneNumber: newPhoneNumber\r\n      };\r\n\r\n      phonebookService\r\n        .addPerson(personObject)\r\n        .then(res => {\r\n          setPersons(persons.concat(res));\r\n          setNewName('');\r\n          setNewPhoneNumber('');\r\n          setNotificationWithTimer(\r\n            'success',\r\n            `${res.name} was successfully added`\r\n          );\r\n        })\r\n        .catch(error => {\r\n          setNotificationWithTimer('error', 'Could not add this person');\r\n        });\r\n    } else {\r\n      // window.alert(`${newName} is already added to phonebook`);\r\n      if (window.confirm('Person already exists. Do you wish to update?')) {\r\n        console.log('Person already exists');\r\n        const currentPersonId = persons[personExists].id;\r\n        console.log(currentPersonId);\r\n        const personObject = {\r\n          name: newName,\r\n          phoneNumber: newPhoneNumber\r\n        };\r\n        phonebookService\r\n          .updatePerson(currentPersonId, personObject)\r\n          .then(res => {\r\n            console.log(res);\r\n            setPersons(\r\n              persons.map(person =>\r\n                person.id !== currentPersonId ? person : res\r\n              )\r\n            );\r\n            setNewName('');\r\n            setNewPhoneNumber('');\r\n            setNotificationWithTimer(\r\n              'success',\r\n              `${res.name} was updated successfully`\r\n            );\r\n          })\r\n          .catch(error => {\r\n            setNotificationWithTimer('error', 'Could not update');\r\n            setPersons(persons.filter(p => p.id !== currentPersonId));\r\n          });\r\n      } else {\r\n        console.log('Do nothing');\r\n      }\r\n    }\r\n  };\r\n\r\n  const setNotificationWithTimer = (type, message) => {\r\n    setNotification(setNotificatonObject(type, message));\r\n    setTimeout(() => {\r\n      setNotification(setNotificatonObject('', ''));\r\n    }, 5000);\r\n  };\r\n\r\n  const setNotificatonObject = (type, message) => {\r\n    return { type: type, message: message };\r\n  };\r\n\r\n  const deleteNameById = person => {\r\n    console.log(person.name, person.id);\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      const tempName = person.name;\r\n      console.log('Delete this person');\r\n      phonebookService\r\n        .deletePerson(person.id)\r\n        .then(res => {\r\n          console.log(res);\r\n          setPersons(persons.filter(p => p.id !== person.id));\r\n          setNewName('');\r\n          setNewPhoneNumber('');\r\n          setNotificationWithTimer(\r\n            'success',\r\n            `${tempName} was deleted successfully`\r\n          );\r\n        })\r\n        .catch(error => {\r\n          setNotificationWithTimer('error', 'Could not delete');\r\n        });\r\n    } else {\r\n      console.log('Nothing happens');\r\n    }\r\n  };\r\n\r\n  const clearAllFields = () => {\r\n    setSeachFilter('');\r\n    setNewName('');\r\n    setNewPhoneNumber('');\r\n  };\r\n\r\n  const handleNameChange = event => {\r\n    console.log('Target: ', event.target.value);\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handlePhoneNumberChange = event => {\r\n    console.log('Target: ', event.target.value);\r\n    setNewPhoneNumber(event.target.value);\r\n  };\r\n\r\n  const handleSearchFilterChange = event => {\r\n    console.log('Target: ', event.target.value);\r\n    setSeachFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Filter\r\n        searchFilter={searchFilter}\r\n        handleSearchFilterChange={handleSearchFilterChange}\r\n      />\r\n      <h2>Phonebook</h2>\r\n      <Notification\r\n        notificationMessage={notification.message}\r\n        notificationType={notification.type}\r\n      />\r\n      <PersonForm\r\n        addName={addName}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newPhoneNumber={newPhoneNumber}\r\n        handlePhoneNumberChange={handlePhoneNumberChange}\r\n      />\r\n      <button type=\"submit\" onClick={clearAllFields}>\r\n        Clear\r\n      </button>\r\n      <h2>Numbers</h2>\r\n      <People\r\n        persons={persons}\r\n        searchFilter={searchFilter}\r\n        deleteName={deleteNameById}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}